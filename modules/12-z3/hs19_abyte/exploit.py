from z3 import *

Desired_Output = [0x69, 0x72, 0x62, 0x75, 0x67, 0x7a, 0x76, 0x31, 0x76, 0x5e, 0x78, 0x31, 0x74, 0x5e, 0x6a, 0x6f,
                  0x31, 0x76, 0x5e, 0x65, 0x35, 0x5e, 0x76, 0x40, 0x32, 0x5e, 0x39, 0x69, 0x33, 0x63, 0x40, 0x31, 0x33, 0x38, 0x7c]


def main():
  inp = [BitVec(i, 8) for i in Desired_Output]  # set variables
  z = Solver()  # make solver instance
  for i in range(len(Desired_Output)):
    z.add((inp[i] ^ 1) == Desired_Output[i])  # add restrictions
  if z.check() == sat:  # check whether could resolve this problem
    ans = z.model()  # get answer
    flag = "".join([chr(int(str(ans[i])))
                   for i in inp])  # get flag from variables
    print(flag)


if __name__ == '__main__':
  main()
